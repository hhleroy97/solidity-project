{"ast":null,"code":"import Web3 from 'web3'; //const web3 = new Web3(window.web3.currentProvider); \n//Above line assumes web3 instance has already been injected on page, \n//doesnt work with Next.js since it does server side rendering\n//DONT USE\n\nlet web3;\n\nif (false && typeof window.web3 !== 'undefined') {\n  //Check if running in browser and if Metamask has injected web3\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //On server or user is not running metamask\n  const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/e92a66fdade34795868c6f2dff971cf6');\n  web3 = new Web3(provider);\n}\n\nexport default web3;","map":{"version":3,"sources":["C:/Users/leroy/Documents/kickstart/ethereum/web3.js"],"names":["Web3","web3","window","currentProvider","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CAEA;AACA;AACA;AACA;;AAEA,IAAIC,IAAJ;;AAEA,IAAI,SAAqC,OAAOC,MAAM,CAACD,IAAd,KAAwB,WAAjE,EAA+E;AAC/E;AACIA,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYE,eAArB,CAAP;AACH,CAHD,MAGO;AACH;AACA,QAAMC,QAAQ,GAAG,IAAIJ,IAAI,CAACK,SAAL,CAAeC,YAAnB,CAAgC,+DAAhC,CAAjB;AACAL,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASI,QAAT,CAAP;AACH;;AAED,eAAeH,IAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\n//const web3 = new Web3(window.web3.currentProvider); \r\n//Above line assumes web3 instance has already been injected on page, \r\n//doesnt work with Next.js since it does server side rendering\r\n//DONT USE\r\n\r\nlet web3;\r\n\r\nif ((typeof(window) !== 'undefined') && (typeof(window.web3) !== 'undefined')) { \r\n//Check if running in browser and if Metamask has injected web3\r\n    web3 = new Web3(window.web3.currentProvider); \r\n} else {\r\n    //On server or user is not running metamask\r\n    const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/e92a66fdade34795868c6f2dff971cf6');\r\n    web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;"]},"metadata":{},"sourceType":"module"}